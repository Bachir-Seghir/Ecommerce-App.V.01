{"version":3,"file":"static/webpack/static/development/pages/index.js.d684192d5906b19afc19.hot-update.js","sources":["webpack:///./components/DeleteItem.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { ALL_ITEMS_QUERY } from './Items';\n\nconst DELETE_ITEM_MUTATION = gql`\n  mutation DELETE_ITEM_MUTATION($id: ID!) {\n    deleteItem(id: $id) {\n      id\n    }\n  }\n`;\nclass DeleteItem extends Component {\n  update = (cache, payload) => {\n    // update manually the cache on the client, so it matches the server\n\n    // 1. Read the cache for the items we want\n    const data = cache.readQuery({ query: ALL_ITEMS_QUERY });\n\n    // 2. filter the deleted item out of the page\n    data.items = data.items.filter(\n      (item) => item.id !== payload.data.deleteItem.id\n    );\n\n    // 3. put the items back\n    cache.writeQuery({ query: ALL_ITEMS_QUERY, data });\n  };\n  render() {\n    return (\n      <Mutation\n        mutation={DELETE_ITEM_MUTATION}\n        variables={{\n          id: this.props.id,\n        }}\n        update={this.update}>\n        {(deleteItem, { error }) => (\n          <button\n            onClick={() => {\n              if (confirm('Are you sure you want delete this item?')) {\n                deleteItem().catch((err) => {\n                  alert(err.message);\n                });\n              }\n            }}>\n            {this.props.children}\n          </button>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default DeleteItem;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAMA;;;;;;;;;;;;;;;;;;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AADA;AAGA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAcA;;;;AArCA;AACA;AAuCA;;;;A","sourceRoot":""}