{"version":3,"file":"static/webpack/static/development/pages/order.js.79f9404543977ea0fa87.hot-update.js","sources":["webpack:///./components/Order.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from 'react-apollo';\nimport { format } from 'date-fns';\nimport Head from 'next/head';\nimport gql from 'graphql-tag';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\nimport OrderStyles from './styles/OrderStyles';\n\nconst SINGLE_ORDER_QUERY = gql`\n  query SINGLE_ORDER_QUERY($id: ID!) {\n    order(id: $id) {\n      id\n      charge\n      total\n      createdAt\n      user {\n        id\n      }\n      items {\n        id\n        title\n        image\n        price\n        description\n        quantity\n      }\n    }\n  }\n`;\n\nclass Order extends Component {\n  render() {\n    return (\n      <Query query={SINGLE_ORDER_QUERY} variables={{ id: this.props.id }}>\n        {({ data, error, loading }) => {\n          if (error) return <Error error={error} />;\n          if (loading) return <p>Loading...</p>;\n          const order = data.order;\n          return (\n            <OrderStyles>\n              <Head>\n                <title>Mento Shop - Order {order.id}</title>\n              </Head>\n              <p>\n                <span>Order ID :</span>\n                <span>{this.props.id}</span>\n              </p>\n              <p>\n                <span>Charge:</span>\n                <span>{order.charge}</span>\n              </p>\n              <p>\n                <span>Date:</span>\n                <span>{format(order.createdAt, 'MMMM d, YYYY h:mm a')}</span>\n              </p>\n              <p>\n                <span>Order Total :</span>\n                <span>{formatMoney(order.total)}</span>\n              </p>\n              <p>\n                <span>Order Count :</span>\n                <span>{order.items.length}</span>\n              </p>\n            </OrderStyles>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nOrder.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default Order;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAqBA;;;;;;;;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;;;;AAtCA;AACA;AAwCA;AACA;AADA;AAIA;;;;A","sourceRoot":""}